# -*- coding: utf-8 -*-
"""occ.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A577xE7xKWrU05LQhMAt1ny_vpEueEjy
"""

def occlusion(model, image, label, occ_size=50, occ_stride=50, occ_pixel=0.5):
    
    width, height = 224, 224

    output_height = int(np.ceil((height-occ_size)/occ_stride))
    output_width = int(np.ceil((width-occ_size)/occ_stride))
    
    heatmap = np.zeros((output_height, output_width))
    
    for h in range(0, height):
        for w in range(0, width):
            
            h_start = h*occ_stride
            w_start = w*occ_stride
            h_end = min(height, h_start + occ_size)
            w_end = min(width, w_start + occ_size)
            
            if (w_end) >= width or (h_end) >= height:
                continue
            input_image = np.copy(image)
            input_image[ w_start:w_end, h_start:h_end,:] = occ_pixel
            output= model.predict(input_image.reshape(1,224,224,3))
            prob= output[0][label]
            heatmap[h, w] = prob 

    return heatmap, max(output[0])

heatmap, prob_no_occ = occlusion(model, occ_image , 10 , 25, 5)
imgplot = sns.heatmap(heatmap, xticklabels=False, yticklabels=False, vmax=prob_no_occ)
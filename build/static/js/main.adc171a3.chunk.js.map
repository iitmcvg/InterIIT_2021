{"version":3,"sources":["components/NavBar.js","components/Results.js","components/CardGrid.js","components/Controls.js","components/Socket.js","views/Augment/aug.js","routes/App.js","views/Login/Login.js","serviceWorker.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","style","fontFamily","Navbar","backgroundColor","light","expand","NavbarBrand","href","color","NavbarToggler","onClick","Collapse","navbar","Nav","className","path","name","map","data","key","NavItem","marginLeft","NavLink","Divider","BarChart","this","drawBarChart","svgCanvas","d3","refs","canvas","append","attr","selectAll","enter","datapoint","iteration","dataPoint","i","text","ref","Component","Results","CardGrid","Grid","container","spacing","justify","images","item","index","xs","height","flexBasis","src","URL","createObjectURL","position","width","React","Controls","handleChange","inp","id","target","parentNode","value","getAttribute","setState","bind","valuetext","input","padding","paddingLeft","paddingRight","disp","min","max","step","def","Typography","state","Slider","getAriaValueText","aria-labelledby","defaultValue","onChangeCommitted","valueLabelDisplay","marks","label","socket","socketIOClient","Augment","getData","alert","window","location","blob","Blob","type","newlist","push","on","emit","off","hist","createBrowserHistory","routes","component","username","setUsername","password","setPassword","margin","textAlign","Container","fontWeight","fontSize","fontStyle","display","justifyContent","alignItems","FormGroup","FormControl","InputLabel","Input","onChange","e","Button","document","getElementById","disabled","length","formdata","FormData","set","axios","post","headers","then","res","substring","localStorage","setItem","App","history","prop","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adc171a3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Divider } from '@material-ui/core';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  NavLink,\n  NavItem,\n  Nav,\n} from 'reactstrap';\n\nconst NavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const list = () => {\n    return [\n      { path: '/augment', name: 'AUGMENT' },\n      { path: '/results', name: 'RESULTS' },\n      { path: '/auth', name: 'TOKEN' },\n    ];\n  };\n  return (\n    <div\n      style={{\n        fontFamily: 'Proxima EBold,sans-serif'\n      }}\n    >\n      <Navbar style={{ backgroundColor: 'inherit' }} light expand='md'>\n        <NavbarBrand href='/' style={{ color: '#E00420' }}>\n          INTER - IIT TECH MEET 9.0\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className='ml-auto' navbar>\n            {list().map((data, key) => (\n              <NavItem\n                className='ml-auto'\n                key={key}\n                style={{ marginLeft: '10px' }}\n              >\n                <NavLink href={data.path} style={{ color: '#E00420' }}>\n                  {data.name}\n                </NavLink>\n              </NavItem>\n            ))}\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <Divider style={{ backgroundColor: 'black' }}></Divider>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass BarChart extends Component {\n  componentDidMount() {\n    const data = [2, 4, 2, 6, 8, 12, 2.5, 5, 12, 6.6, 4.2, 5, 10, 1, 2, 7, 4];\n    this.drawBarChart(data);\n  }\n  drawBarChart(data) {\n    const canvasHeight = 400;\n    const canvasWidth = 600;\n    const scale = 20;\n\n    const svgCanvas = d3\n      .select(this.refs.canvas)\n      .append('svg')\n      .attr('width', 800)\n      .attr('height', 400)\n      .style('border', '1px solid black');\n    svgCanvas\n      .selectAll('rect')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('width', 40)\n      .attr('height', (datapoint) => datapoint * scale)\n      .attr('fill', 'orange')\n      .attr('x', (datapoint, iteration) => iteration * 45)\n      .attr('y', (datapoint) => canvasHeight - datapoint * scale);\n    svgCanvas\n      .selectAll('text')\n      .data(data)\n      .enter()\n      .append('text')\n      .attr('x', (dataPoint, i) => i * 45 + 10)\n      .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n      .text((dataPoint) => dataPoint);\n  }\n  render() {\n    return <div ref='canvas'></div>;\n  }\n}\n\nconst Results = () => {\n  return (\n    <div>\n      <h1>Results</h1>\n      {/* <h3>Min is {d3.min(values)}</h3> */}\n      <BarChart />\n    </div>\n  );\n};\n\nexport default Results;\n","import React from 'react'\nimport {\n    Grid\n} from '@material-ui/core'\nexport default class CardGrid extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <Grid container spacing={0} justify=\"center\">\n                {\n                    this.props.images && this.props.images.map((item, index) => {\n                        return (\n                            <Grid item xs={2} key={index} \n                                style={{ height: 'fit-content', flexBasis:'20%' }}>\n                                <img\n                                    src={URL.createObjectURL(item)}\n                                    style={{\n                                        position: 'inherit',\n                                        height: '60%',\n                                        width: '60%'\n                                    }}\n                                />\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react'\nimport {\n    Slider, Typography\n} from '@material-ui/core'\n\nexport default class Controls extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange = (inp) => {\n        var id = inp.target.parentNode.id\n        var value = inp.target.getAttribute('aria-valuetext')\n        this.setState({\n            [id]: value\n        })\n    }\n\n    render() {\n        function valuetext(input) {\n            return input\n        }\n        const features = [\n            {\n                disp: \"Scaling\",\n                name: \"scale\",\n                min: 0,\n                max: 1,\n                step: 0.01,\n                def: 0\n            },\n            {\n                disp: \"Rotating\",\n                name: \"rotate\",\n                min: -359,\n                max: 359,\n                step: 1,\n                def: 0\n            },\n        ]\n\n        return (\n            <div>\n                <div style={{ padding: '10%', paddingLeft: '20%', paddingRight: '20%' }}>\n                    {\n                        features.map((item, index) => {\n                            return (\n                                <div key={index}>\n                                    <Typography>\n                                        {item.disp} : {this.state && this.state[item.name]}\n                                    </Typography>\n                                    <Slider\n                                        getAriaValueText={valuetext}\n                                        aria-labelledby=\"discrete-slider-small-steps\"\n                                        step={item.step}\n                                        defaultValue={item.def}\n                                        min={item.min}\n                                        max={item.max}\n                                        id={item.name}\n                                        onChangeCommitted={this.handleChange}\n                                        valueLabelDisplay=\"auto\"\n                                        marks={[{value: item.min, label: item.min}, {value: item.max, label: item.max} ]}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import socketIOClient from 'socket.io-client'\n\nexport var socket = socketIOClient('http://localhost:5000/')\n","import React from 'react'\nimport {\n    Grid\n} from '@material-ui/core'\n\nimport Controls from '../../components/Controls'\nimport CardGrid from '../../components/CardGrid'\nimport { socket } from '../../components/Socket'\n\nexport default class Augment extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: []\n        }\n    }\n\n    getData = (data) => {\n        if (typeof (data) === 'string') {\n            alert(data)\n            window.location.href = '/auth'\n        }\n        else {\n            const blob = new Blob([data], { type: 'image/png' })\n            var newlist = this.state.images\n            newlist.push(blob)\n            this.setState({\n                images: newlist\n            })\n        }\n    }\n\n    componentDidMount() {\n        socket.on('auglist', this.getData)\n        socket.emit('auglist')\n    }\n    componentWillUnmount() {\n        socket.off('auglist')\n    }\n\n    render() {\n        return (\n            <Grid container spacing={0}>\n                <Grid item xs={8}>\n                    <Controls />\n                </Grid>\n                <Grid item xs={4}>\n                    <CardGrid images={this.state.images} />\n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport NavBar from '../components/NavBar';\nimport Results from '../components/Results';\nimport CardGrid from '../components/CardGrid';\n\nimport Login from '../views/Login/Login';\nimport Augment from '../views/Augment/aug'\n\nvar hist = createBrowserHistory();\n\nvar routes = [\n  { path: '/', component: Augment },\n  { path: '/augment', component: Augment},\n  { path: '/results', component: Results },\n  { path: '/auth', component: Login },\n];\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <Router history={hist}>\n          <Switch>\n            {routes.map((prop, key) => {\n              return (\n                <Route\n                  exact\n                  path={prop.path}\n                  key={key}\n                  component={prop.component}\n                />\n              );\n            })}\n          </Switch>\n        </Router>\n        <CardGrid />\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n    FormGroup,\n    FormControl,\n    InputLabel,\n    Input,\n    Container,\n    Button\n} from \"@material-ui/core\";\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleSubmit() {\n        var btn = document.getElementById('submitbtn')\n        btn.disabled = true\n\n        if (username.length > 0 && password.length > 0) {\n            var formdata = new FormData()\n            formdata.set('username', username)\n            formdata.set('password', password)\n\n            var headers = {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            axios.post('http://localhost:5000/token', formdata, headers)\n                .then((res) => {\n                    var data = res.data\n                    switch (data.substring(0, 3)) {\n                        case '404':\n                        case '405':\n                        case '500':\n                            alert(data)\n                            window.location.href = \"/auth\"\n                            break;\n                        default:\n                            localStorage.setItem('gridToken', data)\n                            alert('Token has been saved')\n                            window.location.href = '/denoise'\n                    }\n                })\n        }\n        else{\n            alert('Empty Username / Password')\n            window.location.href = '/auth'\n        }\n    }\n\n    function handleName(e) {\n        setUsername(e.target.value)\n    }\n    function handlePasswd(e) {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <div style={{ width: '30%', margin: 'auto', textAlign: 'center' }}>\n            <Container>\n                <br />\n                <div style={{\n                    fontFamily: 'Riona Sans,sans-serif',\n                    fontWeight: 'bolder',\n                    fontSize: '200%',\n                    fontStyle: 'italic',\n                    color: '#047BD5',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }} >\n                    Retrieve your token\n                </div>\n                <br />\n                <form>\n                    <FormGroup>\n                        <FormControl>\n                            <InputLabel>Username</InputLabel>\n                            <Input id=\"input1\" onChange={handleName} />\n                        </FormControl>\n                    </FormGroup>\n                    <br />\n                    <FormGroup>\n                        <FormControl>\n                            <InputLabel>Password</InputLabel>\n                            <Input id=\"input2\" type=\"password\" onChange={handlePasswd} />\n                        </FormControl>\n                    </FormGroup>\n                </form>\n                <br />\n                <Button id=\"submitbtn\" onClick={handleSubmit}>\n                    Login\n                </Button>\n                <br />\n            </Container>\n            <br />\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport App from './routes/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}
{"version":3,"sources":["components/NavBar.js","components/Results.js","views/Augment/stepper.js","components/Socket.js","views/Augment/dir.js","views/Augment/controls.js","views/Augment/imagegrid.js","views/Augment/aug.js","routes/App.js","views/Login/Login.js","serviceWorker.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","style","fontFamily","Navbar","backgroundColor","light","expand","NavbarBrand","href","color","NavbarToggler","onClick","Collapse","navbar","Nav","className","path","name","map","data","key","NavItem","marginLeft","NavLink","Divider","BarChart","this","drawBarChart","svgCanvas","d3","refs","canvas","append","attr","selectAll","enter","datapoint","iteration","dataPoint","i","text","ref","Component","Results","StepperControl","steps","state","active","localStorage","getItem","parseInt","display","justifyContent","Button","variant","act","setItem","switch","setState","disabled","Stepper","activeStep","width","padding","label","index","Step","StepLabel","length","flag","React","socket","socketIOClient","StyledTableCell","withStyles","theme","head","fontSize","palette","common","white","body","TableCell","Dir","getData","dir","handleClick","newf","canProceed","on","emit","off","Grid","container","spacing","item","xs","TableContainer","component","Paper","maxHeight","Table","stickyHeader","TableHead","TableRow","TableBody","row","num","Controls","handleChange","inp","id","target","parentNode","value","getAttribute","bind","valuetext","input","paddingLeft","paddingRight","disp","min","max","step","def","Typography","Slider","getAriaValueText","aria-labelledby","defaultValue","onChangeCommitted","valueLabelDisplay","marks","ImageGrid","alert","window","location","blob","Blob","type","newlist","images","push","justify","height","paddingBottom","src","URL","createObjectURL","position","alt","Augment","getProceed","setProceed","setActive","marginTop","hist","createBrowserHistory","routes","username","setUsername","password","setPassword","margin","textAlign","Container","fontWeight","fontStyle","alignItems","FormGroup","FormControl","InputLabel","Input","onChange","e","document","getElementById","formdata","FormData","set","axios","post","headers","then","res","substring","App","history","prop","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acee9824.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Divider } from '@material-ui/core';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  NavLink,\n  NavItem,\n  Nav,\n} from 'reactstrap';\n\nconst NavBar = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  const list = () => {\n    return [\n      { path: '/augment', name: 'AUGMENT' },\n      { path: '/results', name: 'RESULTS' },\n      { path: '/auth', name: 'TOKEN' },\n    ];\n  };\n  return (\n    <div\n      style={{\n        fontFamily: 'Proxima Bold,sans-serif'\n      }}\n    >\n      <Navbar style={{ backgroundColor: 'inherit' }} light expand='md'>\n        <NavbarBrand href='/' style={{ color: '#E00420' }}>\n          INTER - IIT TECH MEET 9.0\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className='ml-auto' navbar>\n            {list().map((data, key) => (\n              <NavItem\n                className='ml-auto'\n                key={key}\n                style={{ marginLeft: '10px' }}\n              >\n                <NavLink href={data.path} style={{ color: '#E00420' }}>\n                  {data.name}\n                </NavLink>\n              </NavItem>\n            ))}\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <Divider style={{ backgroundColor: 'black' }}></Divider>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass BarChart extends Component {\n  componentDidMount() {\n    const data = [2, 4, 2, 6, 8, 12, 2.5, 5, 12, 6.6, 4.2, 5, 10, 1, 2, 7, 4];\n    this.drawBarChart(data);\n  }\n  drawBarChart(data) {\n    const canvasHeight = 400;\n    const canvasWidth = 600;\n    const scale = 20;\n\n    const svgCanvas = d3\n      .select(this.refs.canvas)\n      .append('svg')\n      .attr('width', 800)\n      .attr('height', 400)\n      .style('border', '1px solid black');\n    svgCanvas\n      .selectAll('rect')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('width', 40)\n      .attr('height', (datapoint) => datapoint * scale)\n      .attr('fill', 'orange')\n      .attr('x', (datapoint, iteration) => iteration * 45)\n      .attr('y', (datapoint) => canvasHeight - datapoint * scale);\n    svgCanvas\n      .selectAll('text')\n      .data(data)\n      .enter()\n      .append('text')\n      .attr('x', (dataPoint, i) => i * 45 + 10)\n      .attr('y', (dataPoint, i) => canvasHeight - dataPoint * scale - 10)\n      .text((dataPoint) => dataPoint);\n  }\n  render() {\n    return <div ref='canvas'></div>;\n  }\n}\n\nconst Results = () => {\n  return (\n    <div>\n      <h1>Results</h1>\n      {/* <h3>Min is {d3.min(values)}</h3> */}\n      <BarChart />\n    </div>\n  );\n};\n\nexport default Results;\n","import React from 'react';\nimport {\n    Stepper,\n    Step,\n    StepLabel,\n    Button\n} from '@material-ui/core'\n\nexport default class StepperControl extends React.Component {\n    constructor(props) {\n        super(props)\n        this.steps = ['Select directory', 'Choose Augmentations', 'Summary']\n        this.state = {\n            active: localStorage.getItem('page') ? parseInt(localStorage.getItem('page')) : 0\n        }\n    }\n\n    render() {\n        const handleNext = () => {\n            var act = this.state.active + 1\n            localStorage.setItem('page', act)\n            this.props.switch(act)\n            this.setState({\n                active: act\n            })\n        };\n\n        const handleBack = () => {\n            var act = this.state.active - 1\n            localStorage.setItem('page', act)\n            this.props.switch(act)\n            this.setState({\n                active: act\n            })\n        };\n\n        return (\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleBack}\n                    disabled={this.state.active <= 0}\n                >\n                    Back\n                </Button>\n                <Stepper activeStep={this.state.active} style={{ width: '40%', padding: 0 }}>\n                    {this.steps.map((label, index) => {\n                        return (\n                            <Step key={index}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        );\n                    })}\n                </Stepper>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    disabled={this.state.active >= this.steps.length - 1 || !this.props.flag()}\n                >\n                    Next\n                </Button>\n            </div>\n        )\n    }\n}","import socketIOClient from 'socket.io-client'\n\nexport var socket = socketIOClient('http://localhost:5000/')\n","import React from 'react'\nimport {\n    Paper,\n    Grid,\n    TableContainer,\n    Table,\n    TableHead,\n    TableBody,\n    TableRow,\n    TableCell,\n} from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { socket } from '../../components/Socket'\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: '#E00420',\n        fontSize: 20,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontFamily: 'Proxima Reg, sans-serif'\n    },\n}))(TableCell);\n\nexport default class Dir extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            canProceed: false\n        }\n    }\n    getData = (data) => {\n        this.setState({\n            dir: data\n        })\n    }\n    componentDidMount() {\n        socket.on('dirlist', this.getData)\n        socket.emit('dirlist')\n    }\n    componentWillUnmount() {\n        socket.off('dirlist')\n    }\n    handleClick = () => {\n        var newf = !this.state.canProceed\n        this.props.switch(newf)\n        this.setState({\n            canProceed: newf\n        })\n    }\n    render() {\n        return (\n            <Grid container spacing={0} style={{ padding: '5px' }}>\n                <Grid item xs={6}>\n                    <TableContainer component={Paper} style={{ width: '40vw', maxHeight: '80vh' }}>\n                        <Table stickyHeader>\n                            <TableHead>\n                                <TableRow>\n                                    <StyledTableCell>Item</StyledTableCell>\n                                    <StyledTableCell>Count</StyledTableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state && this.state.dir && this.state.dir.map((row) => (\n                                    <TableRow key={row.name}>\n                                        <StyledTableCell component=\"th\"> {row.name} </StyledTableCell>\n                                        <StyledTableCell>{row.num}</StyledTableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Grid>\n                <Grid item xs={6}>\n                    <button onClick={this.handleClick}> Mu </button>\n                </Grid>\n            </Grid>\n        )\n    }\n}","import React from 'react'\nimport {\n    Slider, Typography\n} from '@material-ui/core'\n\nexport default class Controls extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange = (inp) => {\n        var id = inp.target.parentNode.id\n        var value = inp.target.getAttribute('aria-valuetext')\n        this.setState({\n            [id]: value\n        })\n    }\n\n    render() {\n        function valuetext(input) {\n            return input\n        }\n        const features = [\n            {\n                disp: \"Scaling\",\n                name: \"scale\",\n                min: 0,\n                max: 1,\n                step: 0.01,\n                def: 0\n            },\n            {\n                disp: \"Rotating\",\n                name: \"rotate\",\n                min: -359,\n                max: 359,\n                step: 1,\n                def: 0\n            },\n        ]\n\n        return (\n            <div>\n                <div\n                    style={{\n                        padding: '10%',\n                        paddingLeft: '20%',\n                        paddingRight: '20%'\n                    }}>\n                    {\n                        features.map((item, index) => {\n                            return (\n                                <div key={index}>\n                                    <Typography style={{ fontFamily: 'Proxima Reg, sans-serif' }}>\n                                        {item.disp} : {this.state && this.state[item.name]}{!this.state && item.def}{this.state && !this.state[item.name] && item.def}\n                                    </Typography>\n                                    <Slider\n                                        getAriaValueText={valuetext}\n                                        aria-labelledby=\"discrete-slider-small-steps\"\n                                        step={item.step}\n                                        defaultValue={item.def}\n                                        min={item.min}\n                                        max={item.max}\n                                        id={item.name}\n                                        onChangeCommitted={this.handleChange}\n                                        valueLabelDisplay=\"auto\"\n                                        marks={[{ value: item.min, label: item.min }, { value: item.max, label: item.max }]}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport {\n    Grid\n} from '@material-ui/core'\n\nimport { socket } from '../../components/Socket'\n\nexport default class ImageGrid extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: []\n        }\n    }\n    getData = (data) => {\n        if (typeof (data) === 'string') {\n            alert(data)\n            window.location.href = '/auth'\n        }\n        else {\n            const blob = new Blob([data], { type: 'image/png' })\n            var newlist = this.state.images\n            newlist.push(blob)\n            this.setState({\n                images: newlist\n            })\n        }\n    }\n\n    componentDidMount() {\n        socket.on('auglist', this.getData)\n        socket.emit('auglist')\n    }\n    componentWillUnmount() {\n        socket.off('auglist')\n    }\n    render() {\n        return (\n            <Grid container spacing={0} justify=\"center\">\n                {\n                    this.state.images && this.state.images.map((item, index) => {\n                        return (\n                            <Grid item xs={3} key={index}\n                                style={{ height: 'fit-content', paddingBottom: '4px' }}>\n                                <img\n                                    src={URL.createObjectURL(item)}\n                                    style={{\n                                        position: 'inherit',\n                                        height: '60%',\n                                        width: '60%'\n                                    }}\n                                    alt={index}\n                                />\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        )\n    }\n}","import React from 'react'\nimport {\n    Grid\n} from '@material-ui/core'\n\nimport StepperControl from './stepper'\nimport Dir from './dir'\nimport Controls from './controls'\nimport ImageGrid from './imagegrid'\n\n\nexport default class Augment extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: [],\n            active: localStorage.getItem('page') ? parseInt(localStorage.getItem('page')) : 0,\n            canProceed: false\n        }\n        this.setActive = this.setActive.bind(this)\n        this.getProceed = this.getProceed.bind(this)\n    }\n\n    getProceed = () => {\n        return this.state.canProceed\n    }\n    setProceed = (flag) => {\n        this.setState({\n            canProceed: flag\n        })\n    }\n\n    setActive = (flag) => {\n        this.setState({\n            active: flag,\n            canProceed: false\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <StepperControl switch={this.setActive} flag={this.getProceed} />\n                {\n                    this.state.active === 0 &&\n                    <Dir switch={this.setProceed} />\n                }\n                { this.state.active === 1 &&\n                    <Grid style={{ marginTop: '10px' }} container spacing={0}>\n                        <Grid item xs={8}>\n                            <Controls switch={this.setProceed} />\n                        </Grid>\n                        <Grid item xs={4}>\n                            <ImageGrid />\n                        </Grid>\n                    </Grid>\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nimport NavBar from '../components/NavBar';\nimport Results from '../components/Results';\n\nimport Login from '../views/Login/Login';\nimport Augment from '../views/Augment/aug'\n\nvar hist = createBrowserHistory();\n\nvar routes = [\n  { path: '/', component: Augment },\n  { path: '/augment', component: Augment },\n  { path: '/results', component: Results },\n  { path: '/auth', component: Login },\n];\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <div style={{marginTop:'10px'}}>\n          <Router history={hist}>\n            <Switch>\n              {routes.map((prop, key) => {\n                return (\n                  <Route\n                    exact\n                    path={prop.path}\n                    key={key}\n                    component={prop.component}\n                  />\n                );\n              })}\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n    FormGroup,\n    FormControl,\n    InputLabel,\n    Input,\n    Container,\n    Button\n} from \"@material-ui/core\";\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleSubmit() {\n        var btn = document.getElementById('submitbtn')\n        btn.disabled = true\n\n        if (username.length > 0 && password.length > 0) {\n            var formdata = new FormData()\n            formdata.set('username', username)\n            formdata.set('password', password)\n\n            var headers = {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            axios.post('http://localhost:5000/token', formdata, headers)\n                .then((res) => {\n                    var data = res.data\n                    switch (data.substring(0, 3)) {\n                        case '404':\n                        case '405':\n                        case '500':\n                            alert(data)\n                            window.location.href = \"/auth\"\n                            break;\n                        default:\n                            localStorage.setItem('gridToken', data)\n                            alert('Token has been saved')\n                            window.location.href = '/denoise'\n                    }\n                })\n        }\n        else{\n            alert('Empty Username / Password')\n            window.location.href = '/auth'\n        }\n    }\n\n    function handleName(e) {\n        setUsername(e.target.value)\n    }\n    function handlePasswd(e) {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <div style={{ width: '30%', margin: 'auto', textAlign: 'center' }}>\n            <Container>\n                <br />\n                <div style={{\n                    fontFamily: 'Riona Sans,sans-serif',\n                    fontWeight: 'bolder',\n                    fontSize: '200%',\n                    fontStyle: 'italic',\n                    color: '#047BD5',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }} >\n                    Retrieve your token\n                </div>\n                <br />\n                <form>\n                    <FormGroup>\n                        <FormControl>\n                            <InputLabel>Username</InputLabel>\n                            <Input id=\"input1\" onChange={handleName} />\n                        </FormControl>\n                    </FormGroup>\n                    <br />\n                    <FormGroup>\n                        <FormControl>\n                            <InputLabel>Password</InputLabel>\n                            <Input id=\"input2\" type=\"password\" onChange={handlePasswd} />\n                        </FormControl>\n                    </FormGroup>\n                </form>\n                <br />\n                <Button id=\"submitbtn\" onClick={handleSubmit}>\n                    Login\n                </Button>\n                <br />\n            </Container>\n            <br />\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport App from './routes/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}